// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM8[address(t)](t)
 *     Write: If load(t-1) then RAM8[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load == 1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Input handling

    DMux8Way(
    in=load,
    sel=address,
    a=register0Load,
    b=register1Load,
    c=register2Load,
    d=register3Load,
    e=register4Load,
    f=register5Load,
    g=register6Load,
    h=register7Load);

    // Registers

    Register(in=in, load=register0Load, out=register0Out);
    Register(in=in, load=register1Load, out=register1Out);
    Register(in=in, load=register2Load, out=register2Out);
    Register(in=in, load=register3Load, out=register3Out);
    Register(in=in, load=register4Load, out=register4Out);
    Register(in=in, load=register5Load, out=register5Out);
    Register(in=in, load=register6Load, out=register6Out);
    Register(in=in, load=register7Load, out=register7Out);

    // Output handling
    Mux8Way16(
    sel=address,
    a=register0Out,
    b=register1Out,
    c=register2Out,
    d=register3Out,
    e=register4Out,
    f=register5Out,
    g=register6Out,
    h=register7Out,
    out=out);

}

